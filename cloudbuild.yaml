steps:
  - id: "build image"
    name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "-t",
        "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:latest",
        "-f",
        "${_DOCKERFILE}",
        ".",
      ]

  - id: "push image"
    name: "gcr.io/cloud-builders/docker"
    args: ["push", "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:latest"]

  - id: "deploy service"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      [
        "run",
        "deploy",
        "${_SERVICE_NAME}",
        "--platform",
        "managed",
        "--region",
        "${_DEPLOY_REGION}",
        "--allow-unauthenticated",
        "--image",
        "gcr.io/${PROJECT_ID}/${_SERVICE_NAME}:latest",
      ]

  # Force the new revision to serve 100% of traffic.
  - id: "ensure service live"
    name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    entrypoint: "gcloud"
    args:
      [
        "run",
        "services",
        "update-traffic",
        "${_SERVICE_NAME}",
        "--to-latest",
        "--platform",
        "managed",
        "--region",
        "${_DEPLOY_REGION}",
      ]

  - id: "Deploy to Firebase hosting"
    name: gcr.io/${PROJECT_ID}/firebase
    args: ["deploy", "--project=${PROJECT_ID}", "--only=hosting"]

options:
  machineType: "E2_HIGHCPU_8"
